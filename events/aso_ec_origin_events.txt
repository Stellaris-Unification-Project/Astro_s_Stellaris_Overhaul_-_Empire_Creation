################################
#
# Origin Events
#
################################

namespace = aso_ec_origin

# Amoeba Alveo Setup
country_event = {
	id = aso_ec_origin.1
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		save_global_event_target_as = get_aso_ec_origin_amoeba_alveo_country
		add_modifier = {
			modifier = pacified_amoebas
			days = -1
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = amoeba
					is_country_type = amoeba_borderless
					is_country_type = amoeba_garrison
				}
			}
			set_faction_hostility = {
				set_hostile = no
				set_neutral = yes
				target = prev
			}
		}
		add_research_option = tech_amoeba_strike_craft_1
		add_research_option = tech_regenerative_hull_tissue
		capital_scope = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = no
						is_homeworld = no
						NOT = { is_planet_class = pc_gas_giant }
						is_asteroid = no
						is_colonizable = no
					}
					save_global_event_target_as = get_aso_ec_origin_amoeba_alveo_breeding_grounds
					add_modifier = { modifier = pm_aso_ec_origin_amoeba_alveo_breeding_grounds }
					set_name = "Alveo Feto"
					every_deposit = { remove_deposit = yes }
					add_deposit = d_society_10
					aso_ec_origin_amoeba_alveo_spawn_amoeba_mother = yes
					aso_ec_origin_amoeba_alveo_spawn_amoeba_father = yes
				}
			}
		}
	}
}

# Eldest Sibling Setup
country_event = {
	id = aso_ec_origin.2
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = et_aso_ec_origin_eldest_sibling_species }

		if = {
			limit = { num_guaranteed_colonies >= 2 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							aso_ec_origin_eldest_sibling_generate_npc = yes
						}
					}
					closest_system = {
						limit = { has_star_flag = neighbor_t2_second_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							aso_ec_origin_eldest_sibling_generate_npc = yes
						}
					}
				}
			}
		}
		else_if = {
			limit = { num_guaranteed_colonies >= 1 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							aso_ec_origin_eldest_sibling_generate_npc = yes
						}
					}
					closest_system = {
						limit = { 
							NOT = { has_star_flag = neighbor_t1_first_colony }
							has_owner = no
							any_system_planet = {
								is_ringworld = no
								is_asteroid = no
								is_star = no
								is_moon = no
							}
						}
						if = {
							limit = { any_system_planet = { habitable_planet = yes } }
							random_system_planet = {
								limit = { habitable_planet = yes }
								reroll_planet = yes
								aso_ec_origin_eldest_sibling_generate_npc = yes
							}
						}
						else = {
							random_system_planet = {
								limit = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
								}
								set_planet_size = 18
								random_list = {
									1 = { change_pc = pc_tropical }
									1 = { change_pc = pc_arid }
									1 = { change_pc = pc_continental }
									1 = { change_pc = pc_ocean }
									1 = { change_pc = pc_tundra }
									1 = { change_pc = pc_arctic }
									1 = { change_pc = pc_alpine }
									1 = { change_pc = pc_savannah }
									1 = { change_pc = pc_desert }
								}
								reroll_planet = yes
								aso_ec_origin_eldest_sibling_generate_npc = yes
							}
						}
					}
				}
			}
		}
		else_if = {
			limit = { num_guaranteed_colonies = 0 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_owner = no }
						set_star_flag = aso_ec_origin_eldest_sibling_npc_1_home_system
						if = {
							limit = { any_system_planet = { habitable_planet = yes } }
							random_system_planet = {
								limit = { habitable_planet = yes }
								reroll_planet = yes
								aso_ec_origin_eldest_sibling_generate_npc = yes
							}
						}
						else = {
							random_system_planet = {
								limit = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
								}
								set_planet_size = 18
								random_list = {
									1 = { change_pc = pc_tropical }
									1 = { change_pc = pc_arid }
									1 = { change_pc = pc_continental }
									1 = { change_pc = pc_ocean }
									1 = { change_pc = pc_tundra }
									1 = { change_pc = pc_arctic }
									1 = { change_pc = pc_alpine }
									1 = { change_pc = pc_savannah }
									1 = { change_pc = pc_desert }
								}
								reroll_planet = yes
								aso_ec_origin_eldest_sibling_generate_npc = yes
							}
						}
					}
					closest_system = {
						limit = { 
							NOT = { has_star_flag = aso_ec_origin_eldest_sibling_npc_1_home_system }
							has_owner = no
							any_system_planet = {
								is_ringworld = no
								is_asteroid = no
								is_star = no
								is_moon = no
							}
						}
						if = {
							limit = { any_system_planet = { habitable_planet = yes } }
							random_system_planet = {
								limit = { habitable_planet = yes }
								set_planet_size = 18
								reroll_planet = yes
								aso_ec_origin_eldest_sibling_generate_npc = yes
							}
						}
						else = {
							random_system_planet = {
								limit = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
								}
								set_planet_size = 18
								random_list = {
									1 = { change_pc = pc_tropical }
									1 = { change_pc = pc_arid }
									1 = { change_pc = pc_continental }
									1 = { change_pc = pc_ocean }
									1 = { change_pc = pc_tundra }
									1 = { change_pc = pc_arctic }
									1 = { change_pc = pc_alpine }
									1 = { change_pc = pc_savannah }
									1 = { change_pc = pc_desert }
								}
								reroll_planet = yes
								aso_ec_origin_eldest_sibling_generate_npc = yes
							}
						}
					}
				}
			}
		}
	}
}

# Enlightened Setup
country_event = {
	id = aso_ec_origin.3
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_country_flag = first_alien_life
		set_country_flag = Story2
		save_event_target_as = et_aso_ec_origin_enlightened_country
	
		aso_ec_origin_enlightened_generate_npc = yes
		
		capital_scope = {
			spawn_system = {
				min_jumps = 4
				max_jumps = 8
				initializer = "aso_ec_origin_enlightened_npc_home_system_initializer"
			}
			add_extra_hyperlane_to_spawned_system_effect = yes
		}
		add_opinion_modifier = {
			who = event_target:get_aso_ec_origin_enlightened_npc_country
			modifier = opinion_enlightened_us
		}
		event_target:get_aso_ec_origin_enlightened_npc_country = {
			capital_scope = {
				spawn_system = {
					min_jumps = 0
					max_jumps = 0
					initializer = "aso_ec_origin_enlightened_npc_first_colony_initializer"
				}
				add_extra_hyperlane_to_spawned_system_effect = yes
			}
			country_event = { id = game_start.6 }
			country_event = { id = game_start.9 }
			add_opinion_modifier = {
				who = root
				modifier = opinion_aso_ec_origin_enlightened
			}
		}
		set_subject_of = {
			who = event_target:get_aso_ec_origin_enlightened_npc_country
			subject_type = vassal
		}
	}
}

# Living Planet Setup
country_event = {
	id = aso_ec_origin.4
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		capital_scope = {
		change_pc = pc_hive
			validate_planet_buildings_and_districts = yes
			while = {
				limit = { num_districts = { type = district_farming value > 0 } }
				remove_district = district_farming
				add_district_and_planet_size_if_needed_effect = { district = district_farming_uncapped }
			}
			while = {
				limit = { num_districts = { type = district_generator value > 0 } }
				remove_district = district_farming
				add_district_and_planet_size_if_needed_effect = { district = district_generator_uncapped }
			}
			while = {
				limit = { num_districts = { type = district_mining value > 0 } }
				remove_district = district_farming
				add_district_and_planet_size_if_needed_effect = { district = district_mining_uncapped }
			}
		}
	}
}

# Overlord Setup
country_event = {
	id = aso_ec_origin.5
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_country_flag = first_contact_event
		set_country_flag = Story2 # Already encountered spacefarers
		add_tradition = tr_domination_adopt

		if = {
			limit = { num_guaranteed_colonies >= 2 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							save_event_target_as = et_aso_ec_origin_overlord_vassal_planet
							federation_origin_planet_setup = yes
						}
					}
				}
			}
		}
		if = {
			limit = { num_guaranteed_colonies >= 1 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							save_event_target_as = et_aso_ec_origin_overlord_vassal_planet
							federation_origin_planet_setup = yes
						}
					}
				}
			}
		}
		if = {
			limit = { num_guaranteed_colonies = 0 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_owner = no }
						set_star_flag = aso_ec_origin_overlord_vassal_system
						if = {
							limit = { any_system_planet = { habitable_planet = yes } }
							random_system_planet = {
								limit = { habitable_planet = yes }
								save_event_target_as = et_aso_ec_origin_overlord_vassal_planet
								set_planet_size = 18
							}
						}
						else = {
							random_system_planet = {
								limit = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
								}
								save_event_target_as = et_aso_ec_origin_overlord_vassal_planet
								federation_origin_planet_setup = yes
							}
						}
					}
				}
			}
		}

		# Vassal
		event_target:et_aso_ec_origin_overlord_vassal_planet = {
			solar_system = { generate_home_system_resources = yes }
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				traits = random
				homeworld = this
				effect = { save_event_target_as = et_aso_ec_origin_overlord_vassal_species }
			}
			if = {
				limit = { root = { has_origin = aso_ec_origin_overlord } }
				create_aso_ec_origin_overlord_vassal = yes
			}
			create_colony = { owner = event_target:create_aso_ec_origin_overlord_vassal }
			generate_start_deposits_and_blockers = yes
			generate_start_buildings_and_districts = yes
			generate_start_pops = yes
			solar_system = {
				create_starbase = {
					size = starbase_starport
					owner = event_target:create_aso_ec_origin_overlord_vassal
				}
			}
		}

		event_target:create_aso_ec_origin_overlord_vassal = {
			create_starting_leaders = yes
			country_event = { id = game_start.9 }
			country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
			set_subject_of = {
				who = root
				subject_type = vassal
			}
		}
	}
}

# Presentient Cousins Setup
country_event = {
	id = aso_ec_origin.6
	hide_window = yes

	is_triggered_only = yes

	immediate = { capital_scope = { aso_ec_origin_presentient_cousins_generate_presentient_pops = yes } }
}

# Rogue Planet Setup
country_event = {
	id = aso_ec_origin.7
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		capital_scope = {
			add_modifier = { modifier = bleak_planet }
			add_modifier = { modifier = mineral_rich }
			add_modifier = { modifier = unstable_tectonics }
		}
	}
}

# Sins of the Past Setup
planet_event = {
	id = aso_ec_origin.8
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { has_planet_flag = pf_aso_ec_origin_sins_of_the_past_habitat }
			aso_ec_origin_sins_of_the_past_home_planet_setup = yes
		}
	}
}

# Tale of Two Planets Setup
country_event = {
	id = aso_ec_origin.9
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		capital_scope = {
			solar_system = {
				random_system_planet = {
					limit = { habitable_planet = no }
					save_global_event_target_as = get_aso_ec_origin_tale_of_two_planets_sisterplanet
					set_planet_size = 18
					#set_name = SISTER
				}
				random_system_planet = {
					limit = { is_capital = yes }
					save_global_event_target_as = get_aso_ec_origin_tale_of_two_planets_homeworld				
					#set_name = HOMEWORLD					
				}
			}
		}
		hidden_effect = { country_event = { id = aso_ec_taleoftwoplanets.1 } }
	}
}

# Unilateral Trade Agreement Setup
country_event = {
	id = aso_ec_origin.10
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_country_flag = first_contact_event
		set_country_flag = Story2 # Already encountered spacefarers
		add_tradition = tr_domination_adopt

		if = {
			limit = { num_guaranteed_colonies >= 2 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							save_event_target_as = et_aso_ec_origin_unilateral_trade_agreement_tributary_planet
							federation_origin_planet_setup = yes
						}
					}
				}
			}
		}
		if = {
			limit = { num_guaranteed_colonies >= 1 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							save_event_target_as = et_aso_ec_origin_unilateral_trade_agreement_tributary_planet
							federation_origin_planet_setup = yes
						}
					}
				}
			}
		}
		if = {
			limit = { num_guaranteed_colonies = 0 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_owner = no }
						set_star_flag = aso_ec_origin_unilateral_trade_agreement_tributary_system
						if = {
							limit = { any_system_planet = { habitable_planet = yes } }
							random_system_planet = {
								limit = { habitable_planet = yes }
								save_event_target_as = et_aso_ec_origin_unilateral_trade_agreement_tributary_planet
								set_planet_size = 18
							}
						}
						else = {
							random_system_planet = {
								limit = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
								}
								save_event_target_as = et_aso_ec_origin_unilateral_trade_agreement_tributary_planet
								federation_origin_planet_setup = yes
							}
						}
					}
				}
			}
		}

		# Tributary
		event_target:et_aso_ec_origin_unilateral_trade_agreement_tributary_planet = {
			solar_system = { generate_home_system_resources = yes }
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				traits = random
				homeworld = this
				effect = { save_event_target_as = et_aso_ec_origin_unilateral_trade_agreement_tributary_species }
			}
			if = {
				limit = { root = { has_origin = aso_ec_origin_unilateral_trade_agreement } }
				create_aso_ec_origin_unilateral_trade_agreement_tributary = yes
			}
			create_colony = { owner = event_target:create_aso_ec_origin_unilateral_trade_agreement_tributary }
			generate_start_deposits_and_blockers = yes
			generate_start_buildings_and_districts = yes
			generate_start_pops = yes
			solar_system = {
				create_starbase = {
					size = starbase_starport
					owner = event_target:create_aso_ec_origin_unilateral_trade_agreement_tributary
				}
			}
		}

		event_target:create_aso_ec_origin_unilateral_trade_agreement_tributary = {
			create_starting_leaders = yes
			country_event = { id = game_start.9 }
			country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
			set_subject_of = {
				who = root
				subject_type = tributary
			}
		}
	}
}

# Violent Uplift Setup
country_event = {
	id = aso_ec_origin.11
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		save_global_event_target_as = get_aso_ec_origin_violent_uplift_defender
		capital_scope = {
			solar_system = {
				random_system_planet = {
					limit = { is_capital = yes }
					add_planet_devastation = 50
					random_owned_pop = { kill_pop = yes }
					random_owned_pop = { kill_pop = yes }
					random_owned_pop = { kill_pop = yes }
					add_deposit = d_radioactive_wasteland
					add_deposit = d_city_ruins
					add_deposit = d_bomb_crater
					while = {
						count = 10
						create_army = {
							name = random
							owner = event_target:get_aso_ec_origin_violent_uplift_defender
							type = assault_army
						}
					}
				}
				spawn_system = {
					min_jumps = 5
					max_jumps = 10
					initializer = "aso_ec_origin_violent_uplift_aggressor_initializer"
				}
			}
			random_list = {
				1 = { #Fanatic Purifier
					event_target:get_aso_ec_origin_violent_uplift_aggressor_homeworld = {
						clear_planet_modifiers = yes
						create_species = {
							name = random
							class = random_non_machine
							portrait = random
							traits = random
							homeworld = this
						}
						create_country = {
							name = random
							type = default
							species = last_created_species
							ignore_initial_colony_error = yes
							ethos = {
								ethic = ethic_fanatic_xenophobe
								ethic = ethic_militarist
							}
							authority = random
							origin = origin_default
							civics = {
								civic = civic_fanatic_purifiers
								civic = random
							}
							flag = random
							effect = {
								save_global_event_target_as = get_aso_ec_origin_violent_uplift_aggressor
								species = { save_global_event_target_as = get_aso_ec_origin_violent_uplift_aggressor_species }
								add_resource = { minerals = 1000 }
								add_resource = { energy = 1000 }
								add_resource = { food = 1000 }
								add_resource = { consumer_goods = 1000 }
								add_resource = { alloys = 1000 }
								add_resource = { influence = 1000 }
								add_resource = { unity = 1000 }
								create_fleet = {
									effect = {
										set_owner = event_target:get_aso_ec_origin_violent_uplift_aggressor
										while = {
											count = 3
											create_ship = {
												name = random
												random_existing_design = corvette
											}
										}
										set_location = {
											target = event_target:get_aso_ec_origin_violent_uplift_aggressor_homeworld
											distance = 10
											angle = random
										}
									}
								}
							}
						}
						solar_system = {
							create_starbase = {
								size = starbase_starport
								owner = event_target:get_aso_ec_origin_violent_uplift_aggressor
							}
						}
						event_target:get_aso_ec_origin_violent_uplift_aggressor = {
							give_technology = {
								tech = tech_starbase_2
								message = no
							}
							give_technology = {
								tech = tech_starbase_3
								message = no
							}
							random_owned_starbase = {
								limit = { has_starbase_size = starbase_starport }
								set_starbase_size = starbase_starhold
								set_starbase_module = {
									slot = 1
									module = shipyard
								}
							}
						}
						set_owner = event_target:get_aso_ec_origin_violent_uplift_aggressor
						set_capital = yes
						while = {
							count = 40
							create_pop = { species = event_target:get_aso_ec_origin_violent_uplift_aggressor_species }
						}
						generate_start_buildings_and_districts = yes
					}
				}
				1 = { #Determined Exterminator
					event_target:get_aso_ec_origin_violent_uplift_aggressor_homeworld = {
						clear_planet_modifiers = yes
						change_pc = pc_nuked
						create_species = {
							name = random
							class = MACHINE
							portrait = random
							traits = random
							homeworld = this
							immortal = yes
						}
						create_country = {
							name = random
							type = default
							species = last_created_species
							ethos = { ethic = ethic_gestalt_consciousness }
							authority = auth_machine_intelligence
							origin = origin_default
							civics = {
								civic = civic_machine_terminator
								civic = random
							}
							flag = random
							effect = {
								modify_species = {
									species = this
									add_trait = trait_machine_unit
									add_traits_at_start_of_list = yes
								}
								save_global_event_target_as = get_aso_ec_origin_violent_uplift_aggressor
								species = { save_global_event_target_as = get_aso_ec_origin_violent_uplift_aggressor_species }
								add_resource = { minerals = 1000 }
								add_resource = { energy = 1000 }
								add_resource = { food = 1000 }
								add_resource = { consumer_goods = 1000 }
								add_resource = { alloys = 1000 }
								add_resource = { influence = 1000 }
								add_resource = { unity = 1000 }
								create_fleet = {
									effect = {
										set_owner = event_target:get_aso_ec_origin_violent_uplift_aggressor
										while = {
											count = 3
											create_ship = {
												name = random
												random_existing_design = corvette
											}
										}
										set_location = {
											target = event_target:get_aso_ec_origin_violent_uplift_aggressor_homeworld
											distance = 10
											angle = random
										}
									}
								}
							}
						}
						set_owner = event_target:get_aso_ec_origin_violent_uplift_aggressor
						set_capital = yes
						while = {
							count = 40
							create_pop = { species = event_target:get_aso_ec_origin_violent_uplift_aggressor_species }
						}
						generate_start_buildings_and_districts = yes
						solar_system = {
							create_starbase = {
								size = starbase_starport
								owner = event_target:get_aso_ec_origin_violent_uplift_aggressor
							}
						}
						event_target:get_aso_ec_origin_violent_uplift_aggressor = {
							give_technology = {
								tech = tech_starbase_2
								message = no
							}
							give_technology = {
								tech = tech_starbase_3
								message = no
							}
							random_owned_starbase = {
								limit = { has_starbase_size = starbase_starport }
								set_starbase_size = starbase_starhold
								set_starbase_module = {
									slot = 1
									module = shipyard
								}
							}
						}
					}
				}
				1 = { #Devouring Swarm
					event_target:get_aso_ec_origin_violent_uplift_aggressor_homeworld = {
						clear_planet_modifiers = yes
						create_species = {
							name = random
							class = random_non_machine
							portrait = random
							traits = random
							homeworld = this
						}
						create_country = {
							name = random
							type = default
							species = last_created_species
							ethos = { ethic = ethic_gestalt_consciousness }
							authority = auth_hive_mind
							origin = origin_default
							civics = {
								civic = civic_hive_devouring_swarm
								civic = random
							}
							flag = random
							effect = {
								modify_species = {
									species = this
									add_trait = trait_hive_mind
									add_traits_at_start_of_list = yes
								}
								save_global_event_target_as = get_aso_ec_origin_violent_uplift_aggressor
								species = { save_global_event_target_as = get_aso_ec_origin_violent_uplift_aggressor_species }
								add_resource = { minerals = 1000 }
								add_resource = { energy = 1000 }
								add_resource = { food = 1000 }
								add_resource = { consumer_goods = 1000 }
								add_resource = { alloys = 1000 }
								add_resource = { influence = 1000 }
								add_resource = { unity = 1000 }
								create_fleet = {
									effect = {
										set_owner = event_target:get_aso_ec_origin_violent_uplift_aggressor
										while = {
											count = 3
											create_ship = {
												name = random
												random_existing_design = corvette
											}
										}
										set_location = {
											target = event_target:get_aso_ec_origin_violent_uplift_aggressor_homeworld
											distance = 10
											angle = random
										}
									}
								}
							}
						}
						set_owner = event_target:get_aso_ec_origin_violent_uplift_aggressor
						set_capital = yes
						while = {
							count = 40
							create_pop = { species = event_target:get_aso_ec_origin_violent_uplift_aggressor_species }
						}
						generate_start_buildings_and_districts = yes
						solar_system = {
							create_starbase = {
								size = starbase_starport
								owner = event_target:get_aso_ec_origin_violent_uplift_aggressor
							}
						}
						event_target:get_aso_ec_origin_violent_uplift_aggressor = {
							give_technology = {
								tech = tech_starbase_2
								message = no
							}
							give_technology = {
								tech = tech_starbase_3
								message = no
							}
							random_owned_starbase = {
								limit = { has_starbase_size = starbase_starport }
								set_starbase_size = starbase_starhold
								set_starbase_module = {
									slot = 1
									module = shipyard
								}
							}
						}
					}
				}
			}
		}
		random_owned_starbase = {
			limit = { has_starbase_size = starbase_starport }
			set_starbase_size = starbase_starhold
		}
		create_fleet = {
			effect = {
				set_owner = prev
				while = {
					count = 17
					create_ship = {
						name = random
						random_existing_design = corvette
					}
				}
				set_location = prev.capital_star
			}
		}
		add_extra_hyperlane_to_spawned_system_effect = yes
		add_modifier = { modifier = mod_aso_ec_origin_violent_uplift }
		event_target:get_aso_ec_origin_violent_uplift_aggressor = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_aso_ec_origin_violent_uplift
			}
		}
		add_opinion_modifier = {
			who = event_target:get_aso_ec_origin_violent_uplift_aggressor
			modifier = opinion_aso_ec_origin_violent_uplift
		}
	}
}
